/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: comm.call.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct Comm_ReceiveNewCall: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveNewCall"}
  public var protoMessageName: String {return "ReceiveNewCall"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "time": 2,
    "callId": 3,
    "callerId": 4,
    "callerName": 5,
    "callerAvatar": 6,
    "callerTel": 7,
    "host": 8,
    "port": 9,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "time": 2,
    "call_id": 3,
    "caller_id": 4,
    "caller_name": 5,
    "caller_avatar": 6,
    "caller_tel": 7,
    "host": 8,
    "port": 9,
  ]}

  var unknown = ProtobufUnknownStorage()

  struct Extensions {

    static let Comm_Receive_newCall = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveNewCall>, Comm_Receive>(protoFieldNumber: 40, protoFieldName: "NEW_CALL", jsonFieldName: "nEWCALL", swiftFieldName: "Comm_ReceiveNewCall_newCall", defaultValue: nil)
  }

  public var type: Int32 = 0

  public var time: UInt64 = 0

  public var callId: Data = Data()

  public var callerId: Data = Data()

  public var callerName: String? = nil

  public var callerAvatar: String? = nil

  public var callerTel: String? = nil

  public var host: String? = nil

  public var port: UInt32? = nil

  public init() {}

  public init(type: Int32 = 0,
    time: UInt64 = 0,
    callId: Data = Data(),
    callerId: Data = Data(),
    callerName: String? = nil,
    callerAvatar: String? = nil,
    callerTel: String? = nil,
    host: String? = nil,
    port: UInt32? = nil)
  {
    self.type = type
    self.time = time
    self.callId = callId
    self.callerId = callerId
    self.callerName = callerName
    self.callerAvatar = callerAvatar
    self.callerTel = callerTel
    self.host = host
    self.port = port
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &type)
    case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt64.self, value: &time)
    case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
    case 4: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callerId)
    case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &callerName)
    case 6: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &callerAvatar)
    case 7: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &callerTel)
    case 8: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &host)
    case 9: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt32.self, value: &port)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
    try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: time, protoFieldNumber: 2, protoFieldName: "time", jsonFieldName: "time", swiftFieldName: "time")
    try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 3, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
    try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callerId, protoFieldNumber: 4, protoFieldName: "caller_id", jsonFieldName: "callerId", swiftFieldName: "callerId")
    if let v = callerName {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 5, protoFieldName: "caller_name", jsonFieldName: "callerName", swiftFieldName: "callerName")
    }
    if let v = callerAvatar {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 6, protoFieldName: "caller_avatar", jsonFieldName: "callerAvatar", swiftFieldName: "callerAvatar")
    }
    if let v = callerTel {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 7, protoFieldName: "caller_tel", jsonFieldName: "callerTel", swiftFieldName: "callerTel")
    }
    if let v = host {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 8, protoFieldName: "host", jsonFieldName: "host", swiftFieldName: "host")
    }
    if let v = port {
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: v, protoFieldNumber: 9, protoFieldName: "port", jsonFieldName: "port", swiftFieldName: "port")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveNewCall) -> Bool {
    if type != other.type {return false}
    if time != other.time {return false}
    if callId != other.callId {return false}
    if callerId != other.callerId {return false}
    if ((callerName != nil || other.callerName != nil) && (callerName == nil || other.callerName == nil || callerName! != other.callerName!)) {return false}
    if ((callerAvatar != nil || other.callerAvatar != nil) && (callerAvatar == nil || other.callerAvatar == nil || callerAvatar! != other.callerAvatar!)) {return false}
    if ((callerTel != nil || other.callerTel != nil) && (callerTel == nil || other.callerTel == nil || callerTel! != other.callerTel!)) {return false}
    if ((host != nil || other.host != nil) && (host == nil || other.host == nil || host! != other.host!)) {return false}
    if ((port != nil || other.port != nil) && (port == nil || other.port == nil || port! != other.port!)) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ReceiveCallState: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveCallState"}
  public var protoMessageName: String {return "ReceiveCallState"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "callId": 1,
    "type": 2,
    "calleeSessionId": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "call_id": 1,
    "type": 2,
    "callee_session_id": 3,
  ]}

  var unknown = ProtobufUnknownStorage()

  public enum TypeEnum: ProtobufEnum {
    public typealias RawValue = Int
    case callEnded // = 1
    case callTimeOut // = 2
    case calleeAccepted // = 3
    case calleeRejected // = 4
    case otherCalleeAccepted // = 5
    case otherCalleeRejected // = 6
    case callerCanceled // = 7
    case keepAlive // = 8

    public init() {
      self = .callEnded
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .callEnded
      case 2: self = .callTimeOut
      case 3: self = .calleeAccepted
      case 4: self = .calleeRejected
      case 5: self = .otherCalleeAccepted
      case 6: self = .otherCalleeRejected
      case 7: self = .callerCanceled
      case 8: self = .keepAlive
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "callEnded": self = .callEnded
      case "callTimeOut": self = .callTimeOut
      case "calleeAccepted": self = .calleeAccepted
      case "calleeRejected": self = .calleeRejected
      case "otherCalleeAccepted": self = .otherCalleeAccepted
      case "otherCalleeRejected": self = .otherCalleeRejected
      case "callerCanceled": self = .callerCanceled
      case "keepAlive": self = .keepAlive
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "CALL_ENDED": self = .callEnded
      case "CALL_TIME_OUT": self = .callTimeOut
      case "CALLEE_ACCEPTED": self = .calleeAccepted
      case "CALLEE_REJECTED": self = .calleeRejected
      case "OTHER_CALLEE_ACCEPTED": self = .otherCalleeAccepted
      case "OTHER_CALLEE_REJECTED": self = .otherCalleeRejected
      case "CALLER_CANCELED": self = .callerCanceled
      case "KEEP_ALIVE": self = .keepAlive
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "CALL_ENDED": self = .callEnded
      case "CALL_TIME_OUT": self = .callTimeOut
      case "CALLEE_ACCEPTED": self = .calleeAccepted
      case "CALLEE_REJECTED": self = .calleeRejected
      case "OTHER_CALLEE_ACCEPTED": self = .otherCalleeAccepted
      case "OTHER_CALLEE_REJECTED": self = .otherCalleeRejected
      case "CALLER_CANCELED": self = .callerCanceled
      case "KEEP_ALIVE": self = .keepAlive
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .callEnded: return 1
        case .callTimeOut: return 2
        case .calleeAccepted: return 3
        case .calleeRejected: return 4
        case .otherCalleeAccepted: return 5
        case .otherCalleeRejected: return 6
        case .callerCanceled: return 7
        case .keepAlive: return 8
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .callEnded: return "\"CALL_ENDED\""
        case .callTimeOut: return "\"CALL_TIME_OUT\""
        case .calleeAccepted: return "\"CALLEE_ACCEPTED\""
        case .calleeRejected: return "\"CALLEE_REJECTED\""
        case .otherCalleeAccepted: return "\"OTHER_CALLEE_ACCEPTED\""
        case .otherCalleeRejected: return "\"OTHER_CALLEE_REJECTED\""
        case .callerCanceled: return "\"CALLER_CANCELED\""
        case .keepAlive: return "\"KEEP_ALIVE\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .callEnded: return ".callEnded"
        case .callTimeOut: return ".callTimeOut"
        case .calleeAccepted: return ".calleeAccepted"
        case .calleeRejected: return ".calleeRejected"
        case .otherCalleeAccepted: return ".otherCalleeAccepted"
        case .otherCalleeRejected: return ".otherCalleeRejected"
        case .callerCanceled: return ".callerCanceled"
        case .keepAlive: return ".keepAlive"
        }
      }
    }

  }

  struct Extensions {

    static let Comm_Receive_callState = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveCallState>, Comm_Receive>(protoFieldNumber: 41, protoFieldName: "CALL_STATE", jsonFieldName: "cALLSTATE", swiftFieldName: "Comm_ReceiveCallState_callState", defaultValue: nil)
  }

  public var callId: Data = Data()

  public var type: UInt32 = 0

  public var calleeSessionId: String? = nil

  public init() {}

  public init(callId: Data = Data(),
    type: UInt32 = 0,
    calleeSessionId: String? = nil)
  {
    self.callId = callId
    self.type = type
    self.calleeSessionId = calleeSessionId
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
    case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &type)
    case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &calleeSessionId)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
    try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: type, protoFieldNumber: 2, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
    if let v = calleeSessionId {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 3, protoFieldName: "callee_session_id", jsonFieldName: "calleeSessionId", swiftFieldName: "calleeSessionId")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveCallState) -> Bool {
    if callId != other.callId {return false}
    if type != other.type {return false}
    if ((calleeSessionId != nil || other.calleeSessionId != nil) && (calleeSessionId == nil || other.calleeSessionId == nil || calleeSessionId! != other.calleeSessionId!)) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ReceiveCallsStatus: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveCallsStatus"}
  public var protoMessageName: String {return "ReceiveCallsStatus"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "lastId": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "last_id": 2,
  ]}

  var unknown = ProtobufUnknownStorage()

  public enum TypeEnum: ProtobufEnum {
    public typealias RawValue = Int
    case markRead // = 0
    case callFinished // = 1

    public init() {
      self = .markRead
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .markRead
      case 1: self = .callFinished
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "markRead": self = .markRead
      case "callFinished": self = .callFinished
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "MARK_READ": self = .markRead
      case "CALL_FINISHED": self = .callFinished
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "MARK_READ": self = .markRead
      case "CALL_FINISHED": self = .callFinished
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .markRead: return 0
        case .callFinished: return 1
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .markRead: return "\"MARK_READ\""
        case .callFinished: return "\"CALL_FINISHED\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .markRead: return ".markRead"
        case .callFinished: return ".callFinished"
        }
      }
    }

  }

  struct Extensions {

    static let Comm_Receive_callsStatus = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveCallsStatus>, Comm_Receive>(protoFieldNumber: 42, protoFieldName: "CALLS_STATUS", jsonFieldName: "cALLSSTATUS", swiftFieldName: "Comm_ReceiveCallsStatus_callsStatus", defaultValue: nil)
  }

  public var type: UInt32 = 0

  public var lastId: Data? = nil

  public init() {}

  public init(type: UInt32 = 0,
    lastId: Data? = nil)
  {
    self.type = type
    self.lastId = lastId
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &type)
    case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &lastId)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
    if let v = lastId {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 2, protoFieldName: "last_id", jsonFieldName: "lastId", swiftFieldName: "lastId")
    }
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveCallsStatus) -> Bool {
    if type != other.type {return false}
    if ((lastId != nil || other.lastId != nil) && (lastId == nil || other.lastId == nil || lastId! != other.lastId!)) {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ReceiveCallHistory: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveCallHistory"}
  public var protoMessageName: String {return "ReceiveCallHistory"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "call": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "call": 1,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Comm_ReceiveCallHistory
    var unknown = ProtobufUnknownStorage()
    var _call: Comm_Call? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredMessageField(fieldType: Comm_Call.self, value: &_call)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _call {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "call", jsonFieldName: "call", swiftFieldName: "call")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _call != other._call {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._call = _call
      return clone
    }
  }

  private var _storage = _StorageClass()

  struct Extensions {

    static let Comm_Receive_callHistory = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveCallHistory>, Comm_Receive>(protoFieldNumber: 43, protoFieldName: "CALL_HISTORY", jsonFieldName: "cALLHISTORY", swiftFieldName: "Comm_ReceiveCallHistory_callHistory", defaultValue: nil)
  }

  public var call: Comm_Call {
    get {return _storage._call ?? Comm_Call()}
    set {_uniqueStorage()._call = newValue}
  }

  public init() {}

  public init(call: Comm_Call? = nil)
  {
    let storage = _uniqueStorage()
    storage._call = call
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveCallHistory) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Comm_ReceiveDelCallHistory: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveDelCallHistory"}
  public var protoMessageName: String {return "ReceiveDelCallHistory"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "tel": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "tel": 1,
  ]}

  var unknown = ProtobufUnknownStorage()

  struct Extensions {

    static let Comm_Receive_receiveDelcallHistory = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveDelCallHistory>, Comm_Receive>(protoFieldNumber: 44, protoFieldName: "RECEIVE_DELCALL_HISTORY", jsonFieldName: "rECEIVEDELCALLHISTORY", swiftFieldName: "Comm_ReceiveDelCallHistory_receiveDelcallHistory", defaultValue: nil)
  }

  public var tel: String = ""

  public init() {}

  public init(tel: String = "")
  {
    self.tel = tel
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
    default:
      handled = false
    }
    if handled {
        return true
    } else {
        return try unknown.decodeField(setter: &setter)
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveDelCallHistory) -> Bool {
    if tel != other.tel {return false}
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_MakeCall: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_MakeCall"}
  public var protoMessageName: String {return "MakeCall"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case calleeBusy // = 1
    case callerBusy // = 2
    case callTypeInvalid // = 3
    case calleeInvalid // = 4
    case telInvalid // = 5
    case telNotExist // = 6

    public init() {
      self = .calleeBusy
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .calleeBusy
      case 2: self = .callerBusy
      case 3: self = .callTypeInvalid
      case 4: self = .calleeInvalid
      case 5: self = .telInvalid
      case 6: self = .telNotExist
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "calleeBusy": self = .calleeBusy
      case "callerBusy": self = .callerBusy
      case "callTypeInvalid": self = .callTypeInvalid
      case "calleeInvalid": self = .calleeInvalid
      case "telInvalid": self = .telInvalid
      case "telNotExist": self = .telNotExist
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "CALLEE_BUSY": self = .calleeBusy
      case "CALLER_BUSY": self = .callerBusy
      case "CALL_TYPE_INVALID": self = .callTypeInvalid
      case "CALLEE_INVALID": self = .calleeInvalid
      case "TEL_INVALID": self = .telInvalid
      case "TEL_NOT_EXIST": self = .telNotExist
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "CALLEE_BUSY": self = .calleeBusy
      case "CALLER_BUSY": self = .callerBusy
      case "CALL_TYPE_INVALID": self = .callTypeInvalid
      case "CALLEE_INVALID": self = .calleeInvalid
      case "TEL_INVALID": self = .telInvalid
      case "TEL_NOT_EXIST": self = .telNotExist
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .calleeBusy: return 1
        case .callerBusy: return 2
        case .callTypeInvalid: return 3
        case .calleeInvalid: return 4
        case .telInvalid: return 5
        case .telNotExist: return 6
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .calleeBusy: return "\"CALLEE_BUSY\""
        case .callerBusy: return "\"CALLER_BUSY\""
        case .callTypeInvalid: return "\"CALL_TYPE_INVALID\""
        case .calleeInvalid: return "\"CALLEE_INVALID\""
        case .telInvalid: return "\"TEL_INVALID\""
        case .telNotExist: return "\"TEL_NOT_EXIST\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .calleeBusy: return ".calleeBusy"
        case .callerBusy: return ".callerBusy"
        case .callTypeInvalid: return ".callTypeInvalid"
        case .calleeInvalid: return ".calleeInvalid"
        case .telInvalid: return ".telInvalid"
        case .telNotExist: return ".telNotExist"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_MakeCall.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "type": 1,
      "calleeId": 2,
      "tel": 3,
      "tempPhone": 4,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "type": 1,
      "callee_id": 2,
      "tel": 3,
      "temp_phone": 4,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var type: Int32 = 0

    public var calleeId: Data? = nil

    public var tel: String? = nil

    public var tempPhone: String? = nil

    public init() {}

    public init(type: Int32 = 0,
      calleeId: Data? = nil,
      tel: String? = nil,
      tempPhone: String? = nil)
    {
      self.type = type
      self.calleeId = calleeId
      self.tel = tel
      self.tempPhone = tempPhone
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &type)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &calleeId)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &tel)
      case 4: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &tempPhone)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      if let v = calleeId {
        try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 2, protoFieldName: "callee_id", jsonFieldName: "calleeId", swiftFieldName: "calleeId")
      }
      if let v = tel {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 3, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      }
      if let v = tempPhone {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 4, protoFieldName: "temp_phone", jsonFieldName: "tempPhone", swiftFieldName: "tempPhone")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_MakeCall.Request) -> Bool {
      if type != other.type {return false}
      if ((calleeId != nil || other.calleeId != nil) && (calleeId == nil || other.calleeId == nil || calleeId! != other.calleeId!)) {return false}
      if ((tel != nil || other.tel != nil) && (tel == nil || other.tel == nil || tel! != other.tel!)) {return false}
      if ((tempPhone != nil || other.tempPhone != nil) && (tempPhone == nil || other.tempPhone == nil || tempPhone! != other.tempPhone!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_MakeCall.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "callId": 1,
      "host": 2,
      "port": 3,
      "calleeId": 4,
      "calleeName": 5,
      "calleeAvatar": 6,
      "calleeTel": 7,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "call_id": 1,
      "host": 2,
      "port": 3,
      "callee_id": 4,
      "callee_name": 5,
      "callee_avatar": 6,
      "callee_tel": 7,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var callId: Data = Data()

    public var host: String? = nil

    public var port: UInt32? = nil

    public var calleeId: Data? = nil

    public var calleeName: String? = nil

    public var calleeAvatar: String? = nil

    public var calleeTel: String? = nil

    public init() {}

    public init(callId: Data = Data(),
      host: String? = nil,
      port: UInt32? = nil,
      calleeId: Data? = nil,
      calleeName: String? = nil,
      calleeAvatar: String? = nil,
      calleeTel: String? = nil)
    {
      self.callId = callId
      self.host = host
      self.port = port
      self.calleeId = calleeId
      self.calleeName = calleeName
      self.calleeAvatar = calleeAvatar
      self.calleeTel = calleeTel
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &host)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt32.self, value: &port)
      case 4: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &calleeId)
      case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &calleeName)
      case 6: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &calleeAvatar)
      case 7: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &calleeTel)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      if let v = host {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 2, protoFieldName: "host", jsonFieldName: "host", swiftFieldName: "host")
      }
      if let v = port {
        try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: v, protoFieldNumber: 3, protoFieldName: "port", jsonFieldName: "port", swiftFieldName: "port")
      }
      if let v = calleeId {
        try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 4, protoFieldName: "callee_id", jsonFieldName: "calleeId", swiftFieldName: "calleeId")
      }
      if let v = calleeName {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 5, protoFieldName: "callee_name", jsonFieldName: "calleeName", swiftFieldName: "calleeName")
      }
      if let v = calleeAvatar {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 6, protoFieldName: "callee_avatar", jsonFieldName: "calleeAvatar", swiftFieldName: "calleeAvatar")
      }
      if let v = calleeTel {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 7, protoFieldName: "callee_tel", jsonFieldName: "calleeTel", swiftFieldName: "calleeTel")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_MakeCall.Reply) -> Bool {
      if callId != other.callId {return false}
      if ((host != nil || other.host != nil) && (host == nil || other.host == nil || host! != other.host!)) {return false}
      if ((port != nil || other.port != nil) && (port == nil || other.port == nil || port! != other.port!)) {return false}
      if ((calleeId != nil || other.calleeId != nil) && (calleeId == nil || other.calleeId == nil || calleeId! != other.calleeId!)) {return false}
      if ((calleeName != nil || other.calleeName != nil) && (calleeName == nil || other.calleeName == nil || calleeName! != other.calleeName!)) {return false}
      if ((calleeAvatar != nil || other.calleeAvatar != nil) && (calleeAvatar == nil || other.calleeAvatar == nil || calleeAvatar! != other.calleeAvatar!)) {return false}
      if ((calleeTel != nil || other.calleeTel != nil) && (calleeTel == nil || other.calleeTel == nil || calleeTel! != other.calleeTel!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_MakeCall.Reply>, Comm_Reply>(protoFieldNumber: 270, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_MakeCall_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_MakeCall) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_AcceptCall: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_AcceptCall"}
  public var protoMessageName: String {return "AcceptCall"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case callInvalid // = 1

    public init() {
      self = .callInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .callInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "callInvalid": self = .callInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "CALL_INVALID": self = .callInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "CALL_INVALID": self = .callInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .callInvalid: return 1
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .callInvalid: return "\"CALL_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .callInvalid: return ".callInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_AcceptCall.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "callId": 1,
      "calleeSessionId": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "call_id": 1,
      "callee_session_id": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var callId: Data = Data()

    public var calleeSessionId: String = ""

    public init() {}

    public init(callId: Data = Data(),
      calleeSessionId: String = "")
    {
      self.callId = callId
      self.calleeSessionId = calleeSessionId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &calleeSessionId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: calleeSessionId, protoFieldNumber: 2, protoFieldName: "callee_session_id", jsonFieldName: "calleeSessionId", swiftFieldName: "calleeSessionId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_AcceptCall.Request) -> Bool {
      if callId != other.callId {return false}
      if calleeSessionId != other.calleeSessionId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_AcceptCall.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "callId": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "call_id": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var callId: Data = Data()

    public init() {}

    public init(callId: Data = Data())
    {
      self.callId = callId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_AcceptCall.Reply) -> Bool {
      if callId != other.callId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_AcceptCall.Reply>, Comm_Reply>(protoFieldNumber: 271, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_AcceptCall_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_AcceptCall) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_EndCall: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_EndCall"}
  public var protoMessageName: String {return "EndCall"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum type: ProtobufEnum {
    public typealias RawValue = Int
    case callEnd // = 0
    case callTimeOut // = 1
    case callerCancel // = 2
    case calleeReject // = 3

    public init() {
      self = .callEnd
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .callEnd
      case 1: self = .callTimeOut
      case 2: self = .callerCancel
      case 3: self = .calleeReject
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "callEnd": self = .callEnd
      case "callTimeOut": self = .callTimeOut
      case "callerCancel": self = .callerCancel
      case "calleeReject": self = .calleeReject
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "CALL_END": self = .callEnd
      case "CALL_TIME_OUT": self = .callTimeOut
      case "CALLER_CANCEL": self = .callerCancel
      case "CALLEE_REJECT": self = .calleeReject
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "CALL_END": self = .callEnd
      case "CALL_TIME_OUT": self = .callTimeOut
      case "CALLER_CANCEL": self = .callerCancel
      case "CALLEE_REJECT": self = .calleeReject
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .callEnd: return 0
        case .callTimeOut: return 1
        case .callerCancel: return 2
        case .calleeReject: return 3
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .callEnd: return "\"CALL_END\""
        case .callTimeOut: return "\"CALL_TIME_OUT\""
        case .callerCancel: return "\"CALLER_CANCEL\""
        case .calleeReject: return "\"CALLEE_REJECT\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .callEnd: return ".callEnd"
        case .callTimeOut: return ".callTimeOut"
        case .callerCancel: return ".callerCancel"
        case .calleeReject: return ".calleeReject"
        }
      }
    }

  }

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case callInvalid // = 1
    case callTypeInvalid // = 2

    public init() {
      self = .callInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .callInvalid
      case 2: self = .callTypeInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "callInvalid": self = .callInvalid
      case "callTypeInvalid": self = .callTypeInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "CALL_INVALID": self = .callInvalid
      case "CALL_TYPE_INVALID": self = .callTypeInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "CALL_INVALID": self = .callInvalid
      case "CALL_TYPE_INVALID": self = .callTypeInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .callInvalid: return 1
        case .callTypeInvalid: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .callInvalid: return "\"CALL_INVALID\""
        case .callTypeInvalid: return "\"CALL_TYPE_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .callInvalid: return ".callInvalid"
        case .callTypeInvalid: return ".callTypeInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_EndCall.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "type": 1,
      "callId": 2,
      "duration": 3,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "type": 1,
      "call_id": 2,
      "duration": 3,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var type: UInt32 = 0

    public var callId: Data = Data()

    public var duration: UInt64? = nil

    public init() {}

    public init(type: UInt32 = 0,
      callId: Data = Data(),
      duration: UInt64? = nil)
    {
      self.type = type
      self.callId = callId
      self.duration = duration
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &type)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      case 3: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt64.self, value: &duration)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 2, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      if let v = duration {
        try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: v, protoFieldNumber: 3, protoFieldName: "duration", jsonFieldName: "duration", swiftFieldName: "duration")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_EndCall.Request) -> Bool {
      if type != other.type {return false}
      if callId != other.callId {return false}
      if ((duration != nil || other.duration != nil) && (duration == nil || other.duration == nil || duration! != other.duration!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_EndCall.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "callId": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "call_id": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var callId: Data = Data()

    public init() {}

    public init(callId: Data = Data())
    {
      self.callId = callId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_EndCall.Reply) -> Bool {
      if callId != other.callId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_EndCall.Reply>, Comm_Reply>(protoFieldNumber: 272, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_EndCall_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_EndCall) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_KeepAliveCall: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_KeepAliveCall"}
  public var protoMessageName: String {return "KeepAliveCall"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case callInvalid // = 1

    public init() {
      self = .callInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .callInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "callInvalid": self = .callInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "CALL_INVALID": self = .callInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "CALL_INVALID": self = .callInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .callInvalid: return 1
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .callInvalid: return "\"CALL_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .callInvalid: return ".callInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_KeepAliveCall.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "callId": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "call_id": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var callId: Data = Data()

    public init() {}

    public init(callId: Data = Data())
    {
      self.callId = callId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_KeepAliveCall.Request) -> Bool {
      if callId != other.callId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_KeepAliveCall.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "callId": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "call_id": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var callId: Data = Data()

    public init() {}

    public init(callId: Data = Data())
    {
      self.callId = callId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &callId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: callId, protoFieldNumber: 1, protoFieldName: "call_id", jsonFieldName: "callId", swiftFieldName: "callId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_KeepAliveCall.Reply) -> Bool {
      if callId != other.callId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_KeepAliveCall.Reply>, Comm_Reply>(protoFieldNumber: 273, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_KeepAliveCall_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_KeepAliveCall) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ListCalls: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ListCalls"}
  public var protoMessageName: String {return "ListCalls"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ListCalls.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "lastId": 1,
      "maxSize": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "last_id": 1,
      "max_size": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var lastId: Data? = nil

    private var _maxSize: UInt32? = nil
    public var maxSize: UInt32? {
      get {return _maxSize ?? 100}
      set {_maxSize = newValue}
    }

    public init() {}

    public init(lastId: Data? = nil,
      maxSize: UInt32? = nil)
    {
      self.lastId = lastId
      self.maxSize = maxSize
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &lastId)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt32.self, value: &maxSize)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = lastId {
        try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 1, protoFieldName: "last_id", jsonFieldName: "lastId", swiftFieldName: "lastId")
      }
      if let v = maxSize {
        try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: v, protoFieldNumber: 2, protoFieldName: "max_size", jsonFieldName: "maxSize", swiftFieldName: "maxSize")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ListCalls.Request) -> Bool {
      if ((lastId != nil || other.lastId != nil) && (lastId == nil || other.lastId == nil || lastId! != other.lastId!)) {return false}
      if (((maxSize != nil && maxSize! != 100) || (other.maxSize != nil && other.maxSize! != 100)) && (maxSize == nil || other.maxSize == nil || maxSize! != other.maxSize!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ListCalls.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "calls": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "calls": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var calls: [Comm_Call] = []

    public init() {}

    public init(calls: [Comm_Call] = [])
    {
      if !calls.isEmpty {
        self.calls = calls
      }
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Comm_Call.self, value: &calls)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if !calls.isEmpty {
        try visitor.visitRepeatedMessageField(value: calls, protoFieldNumber: 1, protoFieldName: "calls", jsonFieldName: "calls", swiftFieldName: "calls")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ListCalls.Reply) -> Bool {
      if calls != other.calls {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ListCalls.Reply>, Comm_Reply>(protoFieldNumber: 274, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_ListCalls_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ListCalls) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ListHistoryCalls: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ListHistoryCalls"}
  public var protoMessageName: String {return "ListHistoryCalls"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ListHistoryCalls.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "lastId": 1,
      "maxSize": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "last_id": 1,
      "max_size": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var lastId: Data? = nil

    private var _maxSize: UInt32? = nil
    public var maxSize: UInt32? {
      get {return _maxSize ?? 100}
      set {_maxSize = newValue}
    }

    public init() {}

    public init(lastId: Data? = nil,
      maxSize: UInt32? = nil)
    {
      self.lastId = lastId
      self.maxSize = maxSize
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &lastId)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt32.self, value: &maxSize)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = lastId {
        try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 1, protoFieldName: "last_id", jsonFieldName: "lastId", swiftFieldName: "lastId")
      }
      if let v = maxSize {
        try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: v, protoFieldNumber: 2, protoFieldName: "max_size", jsonFieldName: "maxSize", swiftFieldName: "maxSize")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ListHistoryCalls.Request) -> Bool {
      if ((lastId != nil || other.lastId != nil) && (lastId == nil || other.lastId == nil || lastId! != other.lastId!)) {return false}
      if (((maxSize != nil && maxSize! != 100) || (other.maxSize != nil && other.maxSize! != 100)) && (maxSize == nil || other.maxSize == nil || maxSize! != other.maxSize!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ListHistoryCalls.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "calls": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "calls": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var calls: [Comm_Call] = []

    public init() {}

    public init(calls: [Comm_Call] = [])
    {
      if !calls.isEmpty {
        self.calls = calls
      }
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Comm_Call.self, value: &calls)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if !calls.isEmpty {
        try visitor.visitRepeatedMessageField(value: calls, protoFieldNumber: 1, protoFieldName: "calls", jsonFieldName: "calls", swiftFieldName: "calls")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ListHistoryCalls.Reply) -> Bool {
      if calls != other.calls {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ListHistoryCalls.Reply>, Comm_Reply>(protoFieldNumber: 275, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_ListHistoryCalls_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ListHistoryCalls) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_MarkReadCalls: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_MarkReadCalls"}
  public var protoMessageName: String {return "MarkReadCalls"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_MarkReadCalls.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "lastId": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "last_id": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var lastId: Data = Data()

    public init() {}

    public init(lastId: Data = Data())
    {
      self.lastId = lastId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &lastId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: lastId, protoFieldNumber: 1, protoFieldName: "last_id", jsonFieldName: "lastId", swiftFieldName: "lastId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_MarkReadCalls.Request) -> Bool {
      if lastId != other.lastId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_MarkReadCalls.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_MarkReadCalls.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_MarkReadCalls.Reply>, Comm_Reply>(protoFieldNumber: 276, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_MarkReadCalls_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_MarkReadCalls) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_DelCallHistory: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_DelCallHistory"}
  public var protoMessageName: String {return "DelCallHistory"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_DelCallHistory.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tel": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "tel": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tel: String = ""

    public init() {}

    public init(tel: String = "")
    {
      self.tel = tel
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_DelCallHistory.Request) -> Bool {
      if tel != other.tel {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_DelCallHistory.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tel": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "tel": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tel: String = ""

    public init() {}

    public init(tel: String = "")
    {
      self.tel = tel
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_DelCallHistory.Reply) -> Bool {
      if tel != other.tel {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_DelCallHistory.Reply>, Comm_Reply>(protoFieldNumber: 277, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_DelCallHistory_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_DelCallHistory) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

extension Comm_Receive {
  public var Comm_ReceiveNewCall_newCall: Comm_ReceiveNewCall? {
    get {return getExtensionValue(ext: Comm_ReceiveNewCall.Extensions.Comm_Receive_newCall)}
    set {setExtensionValue(ext: Comm_ReceiveNewCall.Extensions.Comm_Receive_newCall, value: newValue)}
  }
}

extension Comm_Receive {
  public var Comm_ReceiveCallState_callState: Comm_ReceiveCallState? {
    get {return getExtensionValue(ext: Comm_ReceiveCallState.Extensions.Comm_Receive_callState)}
    set {setExtensionValue(ext: Comm_ReceiveCallState.Extensions.Comm_Receive_callState, value: newValue)}
  }
}

extension Comm_Receive {
  public var Comm_ReceiveCallsStatus_callsStatus: Comm_ReceiveCallsStatus? {
    get {return getExtensionValue(ext: Comm_ReceiveCallsStatus.Extensions.Comm_Receive_callsStatus)}
    set {setExtensionValue(ext: Comm_ReceiveCallsStatus.Extensions.Comm_Receive_callsStatus, value: newValue)}
  }
}

extension Comm_Receive {
  public var Comm_ReceiveCallHistory_callHistory: Comm_ReceiveCallHistory? {
    get {return getExtensionValue(ext: Comm_ReceiveCallHistory.Extensions.Comm_Receive_callHistory)}
    set {setExtensionValue(ext: Comm_ReceiveCallHistory.Extensions.Comm_Receive_callHistory, value: newValue)}
  }
}

extension Comm_Receive {
  public var Comm_ReceiveDelCallHistory_receiveDelcallHistory: Comm_ReceiveDelCallHistory? {
    get {return getExtensionValue(ext: Comm_ReceiveDelCallHistory.Extensions.Comm_Receive_receiveDelcallHistory)}
    set {setExtensionValue(ext: Comm_ReceiveDelCallHistory.Extensions.Comm_Receive_receiveDelcallHistory, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_MakeCall_id: Comm_MakeCall.Reply? {
    get {return getExtensionValue(ext: Comm_MakeCall.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_MakeCall.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_AcceptCall_id: Comm_AcceptCall.Reply? {
    get {return getExtensionValue(ext: Comm_AcceptCall.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_AcceptCall.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_EndCall_id: Comm_EndCall.Reply? {
    get {return getExtensionValue(ext: Comm_EndCall.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_EndCall.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_KeepAliveCall_id: Comm_KeepAliveCall.Reply? {
    get {return getExtensionValue(ext: Comm_KeepAliveCall.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_KeepAliveCall.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_ListCalls_id: Comm_ListCalls.Reply? {
    get {return getExtensionValue(ext: Comm_ListCalls.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_ListCalls.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_ListHistoryCalls_id: Comm_ListHistoryCalls.Reply? {
    get {return getExtensionValue(ext: Comm_ListHistoryCalls.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_ListHistoryCalls.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_MarkReadCalls_id: Comm_MarkReadCalls.Reply? {
    get {return getExtensionValue(ext: Comm_MarkReadCalls.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_MarkReadCalls.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_DelCallHistory_id: Comm_DelCallHistory.Reply? {
    get {return getExtensionValue(ext: Comm_DelCallHistory.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_DelCallHistory.Extensions.Comm_Reply_id, value: newValue)}
  }
}

public let Comm_CommCall_Extensions: ProtobufExtensionSet = [
  Comm_ReceiveNewCall.Extensions.Comm_Receive_newCall,
  Comm_ReceiveCallState.Extensions.Comm_Receive_callState,
  Comm_ReceiveCallsStatus.Extensions.Comm_Receive_callsStatus,
  Comm_ReceiveCallHistory.Extensions.Comm_Receive_callHistory,
  Comm_ReceiveDelCallHistory.Extensions.Comm_Receive_receiveDelcallHistory,
  Comm_MakeCall.Extensions.Comm_Reply_id,
  Comm_AcceptCall.Extensions.Comm_Reply_id,
  Comm_EndCall.Extensions.Comm_Reply_id,
  Comm_KeepAliveCall.Extensions.Comm_Reply_id,
  Comm_ListCalls.Extensions.Comm_Reply_id,
  Comm_ListHistoryCalls.Extensions.Comm_Reply_id,
  Comm_MarkReadCalls.Extensions.Comm_Reply_id,
  Comm_DelCallHistory.Extensions.Comm_Reply_id
]
