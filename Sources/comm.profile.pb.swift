/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: comm.profile.proto
 *
 */

import Foundation
import SwiftProtobuf


public struct Comm_ReceiveProfile: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveProfile"}
  public var protoMessageName: String {return "ReceiveProfile"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "profile": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "profile": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Comm_ReceiveProfile
    var unknown = ProtobufUnknownStorage()
    var _type: UInt32 = 0
    var _profile: Comm_Profile? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &_type)
      case 2: handled = try setter.decodeOptionalMessageField(fieldType: Comm_Profile.self, value: &_profile)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      if let v = _profile {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "profile", jsonFieldName: "profile", swiftFieldName: "profile")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if ((_profile != nil || other._profile != nil) && (_profile == nil || other._profile == nil || _profile! != other._profile!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._type = _type
      clone._profile = _profile
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum TypeEnum: ProtobufEnum {
    public typealias RawValue = Int
    case update // = 1
    case kick // = 2

    public init() {
      self = .update
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .update
      case 2: self = .kick
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "update": self = .update
      case "kick": self = .kick
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "UPDATE": self = .update
      case "KICK": self = .kick
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "UPDATE": self = .update
      case "KICK": self = .kick
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .update: return 1
        case .kick: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .update: return "\"UPDATE\""
        case .kick: return "\"KICK\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .update: return ".update"
        case .kick: return ".kick"
        }
      }
    }

  }

  struct Extensions {

    static let Comm_Receive_receiveProfile = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveProfile>, Comm_Receive>(protoFieldNumber: 4, protoFieldName: "RECEIVE_PROFILE", jsonFieldName: "rECEIVEPROFILE", swiftFieldName: "Comm_ReceiveProfile_receiveProfile", defaultValue: nil)
  }

  public var type: UInt32 {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var profile: Comm_Profile? {
    get {return _storage._profile}
    set {_uniqueStorage()._profile = newValue}
  }

  public init() {}

  public init(type: UInt32 = 0,
    profile: Comm_Profile? = nil)
  {
    let storage = _uniqueStorage()
    storage._type = type
    storage._profile = profile
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveProfile) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Comm_ReceiveSession: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ReceiveSession"}
  public var protoMessageName: String {return "ReceiveSession"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [
    "session": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "session": 1,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Comm_ReceiveSession
    var unknown = ProtobufUnknownStorage()
    var _session: Comm_Session? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredMessageField(fieldType: Comm_Session.self, value: &_session)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if let v = _session {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "session", jsonFieldName: "session", swiftFieldName: "session")
      }
      unknown.traverse(visitor: &visitor)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _session != other._session {return false}
      if unknown != other.unknown {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone.unknown = unknown
      clone._session = _session
      return clone
    }
  }

  private var _storage = _StorageClass()

  struct Extensions {

    static let Comm_Receive_receiveSession = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ReceiveSession>, Comm_Receive>(protoFieldNumber: 5, protoFieldName: "RECEIVE_SESSION", jsonFieldName: "rECEIVESESSION", swiftFieldName: "Comm_ReceiveSession_receiveSession", defaultValue: nil)
  }

  public var session: Comm_Session {
    get {return _storage._session ?? Comm_Session()}
    set {_uniqueStorage()._session = newValue}
  }

  public init() {}

  public init(session: Comm_Session? = nil)
  {
    let storage = _uniqueStorage()
    storage._session = session
  }

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ReceiveSession) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Comm_KeepAlive: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_KeepAlive"}
  public var protoMessageName: String {return "KeepAlive"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_KeepAlive.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "idle": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "idle": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var idle: Bool? = nil

    public init() {}

    public init(idle: Bool? = nil)
    {
      self.idle = idle
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &idle)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = idle {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 1, protoFieldName: "idle", jsonFieldName: "idle", swiftFieldName: "idle")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_KeepAlive.Request) -> Bool {
      if ((idle != nil || other.idle != nil) && (idle == nil || other.idle == nil || idle! != other.idle!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_KeepAlive.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_KeepAlive.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_KeepAlive.Reply>, Comm_Reply>(protoFieldNumber: 100, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_KeepAlive_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_KeepAlive) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_Authenticate: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_Authenticate"}
  public var protoMessageName: String {return "Authenticate"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case accountInvalid // = 1
    case passwordInvalid // = 2
    case platformInvalid // = 3
    case tokenInvalid // = 4
    case accountNotActive // = 5

    public init() {
      self = .accountInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .accountInvalid
      case 2: self = .passwordInvalid
      case 3: self = .platformInvalid
      case 4: self = .tokenInvalid
      case 5: self = .accountNotActive
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "accountInvalid": self = .accountInvalid
      case "passwordInvalid": self = .passwordInvalid
      case "platformInvalid": self = .platformInvalid
      case "tokenInvalid": self = .tokenInvalid
      case "accountNotActive": self = .accountNotActive
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "ACCOUNT_INVALID": self = .accountInvalid
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "PLATFORM_INVALID": self = .platformInvalid
      case "TOKEN_INVALID": self = .tokenInvalid
      case "ACCOUNT_NOT_ACTIVE": self = .accountNotActive
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "ACCOUNT_INVALID": self = .accountInvalid
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "PLATFORM_INVALID": self = .platformInvalid
      case "TOKEN_INVALID": self = .tokenInvalid
      case "ACCOUNT_NOT_ACTIVE": self = .accountNotActive
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .accountInvalid: return 1
        case .passwordInvalid: return 2
        case .platformInvalid: return 3
        case .tokenInvalid: return 4
        case .accountNotActive: return 5
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .accountInvalid: return "\"ACCOUNT_INVALID\""
        case .passwordInvalid: return "\"PASSWORD_INVALID\""
        case .platformInvalid: return "\"PLATFORM_INVALID\""
        case .tokenInvalid: return "\"TOKEN_INVALID\""
        case .accountNotActive: return "\"ACCOUNT_NOT_ACTIVE\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .accountInvalid: return ".accountInvalid"
        case .passwordInvalid: return ".passwordInvalid"
        case .platformInvalid: return ".platformInvalid"
        case .tokenInvalid: return ".tokenInvalid"
        case .accountNotActive: return ".accountNotActive"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Authenticate.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "uid": 1,
      "password": 2,
      "platform": 3,
      "token": 4,
      "tokenVoip": 5,
      "platformVersion": 6,
      "screenRatio": 7,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "uid": 1,
      "password": 2,
      "platform": 3,
      "token": 4,
      "token_voip": 5,
      "platform_version": 6,
      "screen_ratio": 7,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var uid: String = ""

    public var password: String = ""

    public var platform: UInt32 = 0

    public var token: String? = nil

    public var tokenVoip: String? = nil

    public var platformVersion: Float? = nil

    public var screenRatio: Float? = nil

    public init() {}

    public init(uid: String = "",
      password: String = "",
      platform: UInt32 = 0,
      token: String? = nil,
      tokenVoip: String? = nil,
      platformVersion: Float? = nil,
      screenRatio: Float? = nil)
    {
      self.uid = uid
      self.password = password
      self.platform = platform
      self.token = token
      self.tokenVoip = tokenVoip
      self.platformVersion = platformVersion
      self.screenRatio = screenRatio
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &uid)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &password)
      case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &platform)
      case 4: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &token)
      case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &tokenVoip)
      case 6: handled = try setter.decodeOptionalField(fieldType: ProtobufFloat.self, value: &platformVersion)
      case 7: handled = try setter.decodeOptionalField(fieldType: ProtobufFloat.self, value: &screenRatio)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: uid, protoFieldNumber: 1, protoFieldName: "uid", jsonFieldName: "uid", swiftFieldName: "uid")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: password, protoFieldNumber: 2, protoFieldName: "password", jsonFieldName: "password", swiftFieldName: "password")
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: platform, protoFieldNumber: 3, protoFieldName: "platform", jsonFieldName: "platform", swiftFieldName: "platform")
      if let v = token {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 4, protoFieldName: "token", jsonFieldName: "token", swiftFieldName: "token")
      }
      if let v = tokenVoip {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 5, protoFieldName: "token_voip", jsonFieldName: "tokenVoip", swiftFieldName: "tokenVoip")
      }
      if let v = platformVersion {
        try visitor.visitSingularField(fieldType: ProtobufFloat.self, value: v, protoFieldNumber: 6, protoFieldName: "platform_version", jsonFieldName: "platformVersion", swiftFieldName: "platformVersion")
      }
      if let v = screenRatio {
        try visitor.visitSingularField(fieldType: ProtobufFloat.self, value: v, protoFieldNumber: 7, protoFieldName: "screen_ratio", jsonFieldName: "screenRatio", swiftFieldName: "screenRatio")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Authenticate.Request) -> Bool {
      if uid != other.uid {return false}
      if password != other.password {return false}
      if platform != other.platform {return false}
      if ((token != nil || other.token != nil) && (token == nil || other.token == nil || token! != other.token!)) {return false}
      if ((tokenVoip != nil || other.tokenVoip != nil) && (tokenVoip == nil || other.tokenVoip == nil || tokenVoip! != other.tokenVoip!)) {return false}
      if ((platformVersion != nil || other.platformVersion != nil) && (platformVersion == nil || other.platformVersion == nil || platformVersion! != other.platformVersion!)) {return false}
      if ((screenRatio != nil || other.screenRatio != nil) && (screenRatio == nil || other.screenRatio == nil || screenRatio! != other.screenRatio!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Authenticate.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "userId": 1,
      "sessionId": 2,
      "host": 3,
      "port": 4,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "user_id": 1,
      "session_id": 2,
      "host": 3,
      "port": 4,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var userId: Data = Data()

    public var sessionId: Data = Data()

    public var host: String = ""

    public var port: UInt32 = 0

    public init() {}

    public init(userId: Data = Data(),
      sessionId: Data = Data(),
      host: String = "",
      port: UInt32 = 0)
    {
      self.userId = userId
      self.sessionId = sessionId
      self.host = host
      self.port = port
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &userId)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &sessionId)
      case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &host)
      case 4: handled = try setter.decodeRequiredField(fieldType: ProtobufUInt32.self, value: &port)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: userId, protoFieldNumber: 1, protoFieldName: "user_id", jsonFieldName: "userId", swiftFieldName: "userId")
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: sessionId, protoFieldNumber: 2, protoFieldName: "session_id", jsonFieldName: "sessionId", swiftFieldName: "sessionId")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: host, protoFieldNumber: 3, protoFieldName: "host", jsonFieldName: "host", swiftFieldName: "host")
      try visitor.visitSingularField(fieldType: ProtobufUInt32.self, value: port, protoFieldNumber: 4, protoFieldName: "port", jsonFieldName: "port", swiftFieldName: "port")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Authenticate.Reply) -> Bool {
      if userId != other.userId {return false}
      if sessionId != other.sessionId {return false}
      if host != other.host {return false}
      if port != other.port {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_Authenticate.Reply>, Comm_Reply>(protoFieldNumber: 101, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_Authenticate_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_Authenticate) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_Login: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_Login"}
  public var protoMessageName: String {return "Login"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case sessionExpired // = 1
    case userInvalid // = 2

    public init() {
      self = .sessionExpired
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .sessionExpired
      case 2: self = .userInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "sessionExpired": self = .sessionExpired
      case "userInvalid": self = .userInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "SESSION_EXPIRED": self = .sessionExpired
      case "USER_INVALID": self = .userInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "SESSION_EXPIRED": self = .sessionExpired
      case "USER_INVALID": self = .userInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .sessionExpired: return 1
        case .userInvalid: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .sessionExpired: return "\"SESSION_EXPIRED\""
        case .userInvalid: return "\"USER_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .sessionExpired: return ".sessionExpired"
        case .userInvalid: return ".userInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Login.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "userId": 1,
      "sessionId": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "user_id": 1,
      "session_id": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var userId: Data = Data()

    public var sessionId: Data = Data()

    public init() {}

    public init(userId: Data = Data(),
      sessionId: Data = Data())
    {
      self.userId = userId
      self.sessionId = sessionId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &userId)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufBytes.self, value: &sessionId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: userId, protoFieldNumber: 1, protoFieldName: "user_id", jsonFieldName: "userId", swiftFieldName: "userId")
      try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: sessionId, protoFieldNumber: 2, protoFieldName: "session_id", jsonFieldName: "sessionId", swiftFieldName: "sessionId")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Login.Request) -> Bool {
      if userId != other.userId {return false}
      if sessionId != other.sessionId {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Login.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "session": 1,
      "serverTime": 2,
      "profile": 3,
      "activeCall": 4,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "session": 1,
      "server_time": 2,
      "profile": 3,
      "active_call": 4,
    ]}

    private class _StorageClass {
      typealias ProtobufExtendedMessage = Comm_Login.Reply
      var unknown = ProtobufUnknownStorage()
      var _session: Comm_Session? = nil
      var _serverTime: UInt64? = nil
      var _profile: Comm_Profile? = nil
      var _activeCall: Comm_ReceiveNewCall? = nil

      init() {}

      func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
        let handled: Bool
        switch protoFieldNumber {
        case 1: handled = try setter.decodeRequiredMessageField(fieldType: Comm_Session.self, value: &_session)
        case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufUInt64.self, value: &_serverTime)
        case 3: handled = try setter.decodeRequiredMessageField(fieldType: Comm_Profile.self, value: &_profile)
        case 4: handled = try setter.decodeOptionalMessageField(fieldType: Comm_ReceiveNewCall.self, value: &_activeCall)
        default:
          handled = false
        }
        if handled {
            return true
        } else {
            return try unknown.decodeField(setter: &setter)
        }
      }

      func traverse(visitor: inout ProtobufVisitor) throws {
        if let v = _session {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "session", jsonFieldName: "session", swiftFieldName: "session")
        }
        if let v = _serverTime {
          try visitor.visitSingularField(fieldType: ProtobufUInt64.self, value: v, protoFieldNumber: 2, protoFieldName: "server_time", jsonFieldName: "serverTime", swiftFieldName: "serverTime")
        }
        if let v = _profile {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "profile", jsonFieldName: "profile", swiftFieldName: "profile")
        }
        if let v = _activeCall {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "active_call", jsonFieldName: "activeCall", swiftFieldName: "activeCall")
        }
        unknown.traverse(visitor: &visitor)
      }

      func isEqualTo(other: _StorageClass) -> Bool {
        if _session != other._session {return false}
        if ((_serverTime != nil || other._serverTime != nil) && (_serverTime == nil || other._serverTime == nil || _serverTime! != other._serverTime!)) {return false}
        if _profile != other._profile {return false}
        if ((_activeCall != nil || other._activeCall != nil) && (_activeCall == nil || other._activeCall == nil || _activeCall! != other._activeCall!)) {return false}
        if unknown != other.unknown {return false}
        return true
      }

      func copy() -> _StorageClass {
        let clone = _StorageClass()
        clone.unknown = unknown
        clone._session = _session
        clone._serverTime = _serverTime
        clone._profile = _profile
        clone._activeCall = _activeCall
        return clone
      }
    }

    private var _storage = _StorageClass()

    public var session: Comm_Session {
      get {return _storage._session ?? Comm_Session()}
      set {_uniqueStorage()._session = newValue}
    }

    public var serverTime: UInt64? {
      get {return _storage._serverTime}
      set {_uniqueStorage()._serverTime = newValue}
    }

    public var profile: Comm_Profile {
      get {return _storage._profile ?? Comm_Profile()}
      set {_uniqueStorage()._profile = newValue}
    }

    public var activeCall: Comm_ReceiveNewCall? {
      get {return _storage._activeCall}
      set {_uniqueStorage()._activeCall = newValue}
    }

    public init() {}

    public init(session: Comm_Session? = nil,
      serverTime: UInt64? = nil,
      profile: Comm_Profile? = nil,
      activeCall: Comm_ReceiveNewCall? = nil)
    {
      let storage = _uniqueStorage()
      storage._session = session
      storage._serverTime = serverTime
      storage._profile = profile
      storage._activeCall = activeCall
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try _storage.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Login.Reply) -> Bool {
      return _storage === other._storage || _storage.isEqualTo(other: other._storage)
    }

    private mutating func _uniqueStorage() -> _StorageClass {
      if !isKnownUniquelyReferenced(&_storage) {
        _storage = _storage.copy()
      }
      return _storage
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_Login.Reply>, Comm_Reply>(protoFieldNumber: 103, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_Login_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_Login) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_Logout: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_Logout"}
  public var protoMessageName: String {return "Logout"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Logout.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Logout.Request) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Logout.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Logout.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_Logout.Reply>, Comm_Reply>(protoFieldNumber: 104, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_Logout_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_Logout) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ChangePassword: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ChangePassword"}
  public var protoMessageName: String {return "ChangePassword"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case passwordInvalid // = 1
    case passwordWeakness // = 2

    public init() {
      self = .passwordInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .passwordInvalid
      case 2: self = .passwordWeakness
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "passwordInvalid": self = .passwordInvalid
      case "passwordWeakness": self = .passwordWeakness
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "PASSWORD_WEAKNESS": self = .passwordWeakness
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "PASSWORD_WEAKNESS": self = .passwordWeakness
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .passwordInvalid: return 1
        case .passwordWeakness: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .passwordInvalid: return "\"PASSWORD_INVALID\""
        case .passwordWeakness: return "\"PASSWORD_WEAKNESS\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .passwordInvalid: return ".passwordInvalid"
        case .passwordWeakness: return ".passwordWeakness"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ChangePassword.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "current": 1,
      "password": 2,
      "kickOthers": 3,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "current": 1,
      "password": 2,
      "kick_others": 3,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var current: String = ""

    public var password: String = ""

    public var kickOthers: Bool = false

    public init() {}

    public init(current: String = "",
      password: String = "",
      kickOthers: Bool = false)
    {
      self.current = current
      self.password = password
      self.kickOthers = kickOthers
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &current)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &password)
      case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufBool.self, value: &kickOthers)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: current, protoFieldNumber: 1, protoFieldName: "current", jsonFieldName: "current", swiftFieldName: "current")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: password, protoFieldNumber: 2, protoFieldName: "password", jsonFieldName: "password", swiftFieldName: "password")
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: kickOthers, protoFieldNumber: 3, protoFieldName: "kick_others", jsonFieldName: "kickOthers", swiftFieldName: "kickOthers")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ChangePassword.Request) -> Bool {
      if current != other.current {return false}
      if password != other.password {return false}
      if kickOthers != other.kickOthers {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ChangePassword.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ChangePassword.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ChangePassword.Reply>, Comm_Reply>(protoFieldNumber: 105, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_ChangePassword_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ChangePassword) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_UpdateProfile: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_UpdateProfile"}
  public var protoMessageName: String {return "UpdateProfile"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case nameInvalid // = 1
    case addressInvalid // = 2
    case genderInvalid // = 3
    case dobInvalid // = 4
    case relationshipInvalid // = 5

    public init() {
      self = .nameInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .nameInvalid
      case 2: self = .addressInvalid
      case 3: self = .genderInvalid
      case 4: self = .dobInvalid
      case 5: self = .relationshipInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "nameInvalid": self = .nameInvalid
      case "addressInvalid": self = .addressInvalid
      case "genderInvalid": self = .genderInvalid
      case "dobInvalid": self = .dobInvalid
      case "relationshipInvalid": self = .relationshipInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "NAME_INVALID": self = .nameInvalid
      case "ADDRESS_INVALID": self = .addressInvalid
      case "GENDER_INVALID": self = .genderInvalid
      case "DOB_INVALID": self = .dobInvalid
      case "RELATIONSHIP_INVALID": self = .relationshipInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "NAME_INVALID": self = .nameInvalid
      case "ADDRESS_INVALID": self = .addressInvalid
      case "GENDER_INVALID": self = .genderInvalid
      case "DOB_INVALID": self = .dobInvalid
      case "RELATIONSHIP_INVALID": self = .relationshipInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .nameInvalid: return 1
        case .addressInvalid: return 2
        case .genderInvalid: return 3
        case .dobInvalid: return 4
        case .relationshipInvalid: return 5
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .nameInvalid: return "\"NAME_INVALID\""
        case .addressInvalid: return "\"ADDRESS_INVALID\""
        case .genderInvalid: return "\"GENDER_INVALID\""
        case .dobInvalid: return "\"DOB_INVALID\""
        case .relationshipInvalid: return "\"RELATIONSHIP_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .nameInvalid: return ".nameInvalid"
        case .addressInvalid: return ".addressInvalid"
        case .genderInvalid: return ".genderInvalid"
        case .dobInvalid: return ".dobInvalid"
        case .relationshipInvalid: return ".relationshipInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_UpdateProfile.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "profile": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "profile": 1,
    ]}

    private class _StorageClass {
      typealias ProtobufExtendedMessage = Comm_UpdateProfile.Request
      var unknown = ProtobufUnknownStorage()
      var _profile: Comm_Profile? = nil

      init() {}

      func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
        let handled: Bool
        switch protoFieldNumber {
        case 1: handled = try setter.decodeRequiredMessageField(fieldType: Comm_Profile.self, value: &_profile)
        default:
          handled = false
        }
        if handled {
            return true
        } else {
            return try unknown.decodeField(setter: &setter)
        }
      }

      func traverse(visitor: inout ProtobufVisitor) throws {
        if let v = _profile {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "profile", jsonFieldName: "profile", swiftFieldName: "profile")
        }
        unknown.traverse(visitor: &visitor)
      }

      func isEqualTo(other: _StorageClass) -> Bool {
        if _profile != other._profile {return false}
        if unknown != other.unknown {return false}
        return true
      }

      func copy() -> _StorageClass {
        let clone = _StorageClass()
        clone.unknown = unknown
        clone._profile = _profile
        return clone
      }
    }

    private var _storage = _StorageClass()

    public var profile: Comm_Profile {
      get {return _storage._profile ?? Comm_Profile()}
      set {_uniqueStorage()._profile = newValue}
    }

    public init() {}

    public init(profile: Comm_Profile? = nil)
    {
      let storage = _uniqueStorage()
      storage._profile = profile
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try _storage.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_UpdateProfile.Request) -> Bool {
      return _storage === other._storage || _storage.isEqualTo(other: other._storage)
    }

    private mutating func _uniqueStorage() -> _StorageClass {
      if !isKnownUniquelyReferenced(&_storage) {
        _storage = _storage.copy()
      }
      return _storage
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_UpdateProfile.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "profile": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "profile": 1,
    ]}

    private class _StorageClass {
      typealias ProtobufExtendedMessage = Comm_UpdateProfile.Reply
      var unknown = ProtobufUnknownStorage()
      var _profile: Comm_Profile? = nil

      init() {}

      func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
        let handled: Bool
        switch protoFieldNumber {
        case 1: handled = try setter.decodeRequiredMessageField(fieldType: Comm_Profile.self, value: &_profile)
        default:
          handled = false
        }
        if handled {
            return true
        } else {
            return try unknown.decodeField(setter: &setter)
        }
      }

      func traverse(visitor: inout ProtobufVisitor) throws {
        if let v = _profile {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "profile", jsonFieldName: "profile", swiftFieldName: "profile")
        }
        unknown.traverse(visitor: &visitor)
      }

      func isEqualTo(other: _StorageClass) -> Bool {
        if _profile != other._profile {return false}
        if unknown != other.unknown {return false}
        return true
      }

      func copy() -> _StorageClass {
        let clone = _StorageClass()
        clone.unknown = unknown
        clone._profile = _profile
        return clone
      }
    }

    private var _storage = _StorageClass()

    public var profile: Comm_Profile {
      get {return _storage._profile ?? Comm_Profile()}
      set {_uniqueStorage()._profile = newValue}
    }

    public init() {}

    public init(profile: Comm_Profile? = nil)
    {
      let storage = _uniqueStorage()
      storage._profile = profile
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try _storage.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_UpdateProfile.Reply) -> Bool {
      return _storage === other._storage || _storage.isEqualTo(other: other._storage)
    }

    private mutating func _uniqueStorage() -> _StorageClass {
      if !isKnownUniquelyReferenced(&_storage) {
        _storage = _storage.copy()
      }
      return _storage
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_UpdateProfile.Reply>, Comm_Reply>(protoFieldNumber: 106, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_UpdateProfile_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_UpdateProfile) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ChangeAvatar: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ChangeAvatar"}
  public var protoMessageName: String {return "ChangeAvatar"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ChangeAvatar.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "userId": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "user_id": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var userId: Data? = nil

    public init() {}

    public init(userId: Data? = nil)
    {
      self.userId = userId
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufBytes.self, value: &userId)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = userId {
        try visitor.visitSingularField(fieldType: ProtobufBytes.self, value: v, protoFieldNumber: 1, protoFieldName: "user_id", jsonFieldName: "userId", swiftFieldName: "userId")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ChangeAvatar.Request) -> Bool {
      if ((userId != nil || other.userId != nil) && (userId == nil || other.userId == nil || userId! != other.userId!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ChangeAvatar.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "avatar": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "avatar": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var avatar: String = ""

    public init() {}

    public init(avatar: String = "")
    {
      self.avatar = avatar
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &avatar)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: avatar, protoFieldNumber: 1, protoFieldName: "avatar", jsonFieldName: "avatar", swiftFieldName: "avatar")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ChangeAvatar.Reply) -> Bool {
      if avatar != other.avatar {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ChangeAvatar.Reply>, Comm_Reply>(protoFieldNumber: 110, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_ChangeAvatar_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ChangeAvatar) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_UpdateDeviceToken: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_UpdateDeviceToken"}
  public var protoMessageName: String {return "UpdateDeviceToken"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_UpdateDeviceToken.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tokenNormal": 1,
      "tokenVoip": 2,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "token_normal": 1,
      "token_voip": 2,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tokenNormal: String? = nil

    public var tokenVoip: String? = nil

    public init() {}

    public init(tokenNormal: String? = nil,
      tokenVoip: String? = nil)
    {
      self.tokenNormal = tokenNormal
      self.tokenVoip = tokenVoip
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &tokenNormal)
      case 2: handled = try setter.decodeOptionalField(fieldType: ProtobufString.self, value: &tokenVoip)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      if let v = tokenNormal {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 1, protoFieldName: "token_normal", jsonFieldName: "tokenNormal", swiftFieldName: "tokenNormal")
      }
      if let v = tokenVoip {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: v, protoFieldNumber: 2, protoFieldName: "token_voip", jsonFieldName: "tokenVoip", swiftFieldName: "tokenVoip")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_UpdateDeviceToken.Request) -> Bool {
      if ((tokenNormal != nil || other.tokenNormal != nil) && (tokenNormal == nil || other.tokenNormal == nil || tokenNormal! != other.tokenNormal!)) {return false}
      if ((tokenVoip != nil || other.tokenVoip != nil) && (tokenVoip == nil || other.tokenVoip == nil || tokenVoip! != other.tokenVoip!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_UpdateDeviceToken.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_UpdateDeviceToken.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_UpdateDeviceToken.Reply>, Comm_Reply>(protoFieldNumber: 112, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_UpdateDeviceToken_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_UpdateDeviceToken) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

///   ************* Register And active account ******************
public struct Comm_CheckAccount: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_CheckAccount"}
  public var protoMessageName: String {return "CheckAccount"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum State: ProtobufEnum {
    public typealias RawValue = Int
    case notExisted // = -1
    case active // = 0
    case inactive // = 1
    case bot // = 2
    case system // = 3
    case banned // = 4
    case tempLocked // = 5

    public init() {
      self = .notExisted
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case -1: self = .notExisted
      case 0: self = .active
      case 1: self = .inactive
      case 2: self = .bot
      case 3: self = .system
      case 4: self = .banned
      case 5: self = .tempLocked
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "notExisted": self = .notExisted
      case "active": self = .active
      case "inactive": self = .inactive
      case "bot": self = .bot
      case "system": self = .system
      case "banned": self = .banned
      case "tempLocked": self = .tempLocked
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "NOT_EXISTED": self = .notExisted
      case "ACTIVE": self = .active
      case "INACTIVE": self = .inactive
      case "BOT": self = .bot
      case "SYSTEM": self = .system
      case "BANNED": self = .banned
      case "TEMP_LOCKED": self = .tempLocked
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "NOT_EXISTED": self = .notExisted
      case "ACTIVE": self = .active
      case "INACTIVE": self = .inactive
      case "BOT": self = .bot
      case "SYSTEM": self = .system
      case "BANNED": self = .banned
      case "TEMP_LOCKED": self = .tempLocked
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .notExisted: return -1
        case .active: return 0
        case .inactive: return 1
        case .bot: return 2
        case .system: return 3
        case .banned: return 4
        case .tempLocked: return 5
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .notExisted: return "\"NOT_EXISTED\""
        case .active: return "\"ACTIVE\""
        case .inactive: return "\"INACTIVE\""
        case .bot: return "\"BOT\""
        case .system: return "\"SYSTEM\""
        case .banned: return "\"BANNED\""
        case .tempLocked: return "\"TEMP_LOCKED\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .notExisted: return ".notExisted"
        case .active: return ".active"
        case .inactive: return ".inactive"
        case .bot: return ".bot"
        case .system: return ".system"
        case .banned: return ".banned"
        case .tempLocked: return ".tempLocked"
        }
      }
    }

  }

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case telInvalid // = 1
    case exceededTimesLimit // = 2

    public init() {
      self = .telInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .telInvalid
      case 2: self = .exceededTimesLimit
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "telInvalid": self = .telInvalid
      case "exceededTimesLimit": self = .exceededTimesLimit
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "TEL_INVALID": self = .telInvalid
      case "EXCEEDED_TIMES_LIMIT": self = .exceededTimesLimit
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "TEL_INVALID": self = .telInvalid
      case "EXCEEDED_TIMES_LIMIT": self = .exceededTimesLimit
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .telInvalid: return 1
        case .exceededTimesLimit: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .telInvalid: return "\"TEL_INVALID\""
        case .exceededTimesLimit: return "\"EXCEEDED_TIMES_LIMIT\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .telInvalid: return ".telInvalid"
        case .exceededTimesLimit: return ".exceededTimesLimit"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_CheckAccount.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tel": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "tel": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tel: String = ""

    public init() {}

    public init(tel: String = "")
    {
      self.tel = tel
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_CheckAccount.Request) -> Bool {
      if tel != other.tel {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_CheckAccount.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "state": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "state": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var state: Int32 = 0

    public init() {}

    public init(state: Int32 = 0)
    {
      self.state = state
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufInt32.self, value: &state)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufInt32.self, value: state, protoFieldNumber: 1, protoFieldName: "state", jsonFieldName: "state", swiftFieldName: "state")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_CheckAccount.Reply) -> Bool {
      if state != other.state {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_CheckAccount.Reply>, Comm_Reply>(protoFieldNumber: 113, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_CheckAccount_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_CheckAccount) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_Register: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_Register"}
  public var protoMessageName: String {return "Register"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case otpNotMatch // = 1
    case otpExpired // = 2
    case nameInvalid // = 3
    case passwordInvalid // = 4
    case telInvalid // = 5

    public init() {
      self = .otpNotMatch
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .otpNotMatch
      case 2: self = .otpExpired
      case 3: self = .nameInvalid
      case 4: self = .passwordInvalid
      case 5: self = .telInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "otpNotMatch": self = .otpNotMatch
      case "otpExpired": self = .otpExpired
      case "nameInvalid": self = .nameInvalid
      case "passwordInvalid": self = .passwordInvalid
      case "telInvalid": self = .telInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "OTP_NOT_MATCH": self = .otpNotMatch
      case "OTP_EXPIRED": self = .otpExpired
      case "NAME_INVALID": self = .nameInvalid
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "TEL_INVALID": self = .telInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "OTP_NOT_MATCH": self = .otpNotMatch
      case "OTP_EXPIRED": self = .otpExpired
      case "NAME_INVALID": self = .nameInvalid
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "TEL_INVALID": self = .telInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .otpNotMatch: return 1
        case .otpExpired: return 2
        case .nameInvalid: return 3
        case .passwordInvalid: return 4
        case .telInvalid: return 5
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .otpNotMatch: return "\"OTP_NOT_MATCH\""
        case .otpExpired: return "\"OTP_EXPIRED\""
        case .nameInvalid: return "\"NAME_INVALID\""
        case .passwordInvalid: return "\"PASSWORD_INVALID\""
        case .telInvalid: return "\"TEL_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .otpNotMatch: return ".otpNotMatch"
        case .otpExpired: return ".otpExpired"
        case .nameInvalid: return ".nameInvalid"
        case .passwordInvalid: return ".passwordInvalid"
        case .telInvalid: return ".telInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Register.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tel": 1,
      "name": 2,
      "password": 3,
      "otp": 4,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "tel": 1,
      "name": 2,
      "password": 3,
      "otp": 4,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tel: String = ""

    public var name: String = ""

    public var password: String = ""

    public var otp: String = ""

    public init() {}

    public init(tel: String = "",
      name: String = "",
      password: String = "",
      otp: String = "")
    {
      self.tel = tel
      self.name = name
      self.password = password
      self.otp = otp
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &name)
      case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &password)
      case 4: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &otp)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 2, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: password, protoFieldNumber: 3, protoFieldName: "password", jsonFieldName: "password", swiftFieldName: "password")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: otp, protoFieldNumber: 4, protoFieldName: "otp", jsonFieldName: "otp", swiftFieldName: "otp")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Register.Request) -> Bool {
      if tel != other.tel {return false}
      if name != other.name {return false}
      if password != other.password {return false}
      if otp != other.otp {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_Register.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_Register.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_Register.Reply>, Comm_Reply>(protoFieldNumber: 108, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_Register_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_Register) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_ForgotPassword: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_ForgotPassword"}
  public var protoMessageName: String {return "ForgotPassword"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case passwordInvalid // = 1
    case otpNotMatch // = 2
    case otpExpired // = 3
    case telInvalid // = 4

    public init() {
      self = .passwordInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .passwordInvalid
      case 2: self = .otpNotMatch
      case 3: self = .otpExpired
      case 4: self = .telInvalid
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "passwordInvalid": self = .passwordInvalid
      case "otpNotMatch": self = .otpNotMatch
      case "otpExpired": self = .otpExpired
      case "telInvalid": self = .telInvalid
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "OTP_NOT_MATCH": self = .otpNotMatch
      case "OTP_EXPIRED": self = .otpExpired
      case "TEL_INVALID": self = .telInvalid
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "PASSWORD_INVALID": self = .passwordInvalid
      case "OTP_NOT_MATCH": self = .otpNotMatch
      case "OTP_EXPIRED": self = .otpExpired
      case "TEL_INVALID": self = .telInvalid
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .passwordInvalid: return 1
        case .otpNotMatch: return 2
        case .otpExpired: return 3
        case .telInvalid: return 4
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .passwordInvalid: return "\"PASSWORD_INVALID\""
        case .otpNotMatch: return "\"OTP_NOT_MATCH\""
        case .otpExpired: return "\"OTP_EXPIRED\""
        case .telInvalid: return "\"TEL_INVALID\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .passwordInvalid: return ".passwordInvalid"
        case .otpNotMatch: return ".otpNotMatch"
        case .otpExpired: return ".otpExpired"
        case .telInvalid: return ".telInvalid"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ForgotPassword.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tel": 1,
      "password": 2,
      "otp": 3,
      "kickOut": 5,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "tel": 1,
      "password": 2,
      "otp": 3,
      "kick_out": 5,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tel: String = ""

    public var password: String = ""

    public var otp: String = ""

    private var _kickOut: Bool? = nil
    public var kickOut: Bool? {
      get {return _kickOut ?? false}
      set {_kickOut = newValue}
    }

    public init() {}

    public init(tel: String = "",
      password: String = "",
      otp: String = "",
      kickOut: Bool? = nil)
    {
      self.tel = tel
      self.password = password
      self.otp = otp
      self.kickOut = kickOut
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
      case 2: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &password)
      case 3: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &otp)
      case 5: handled = try setter.decodeOptionalField(fieldType: ProtobufBool.self, value: &kickOut)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: password, protoFieldNumber: 2, protoFieldName: "password", jsonFieldName: "password", swiftFieldName: "password")
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: otp, protoFieldNumber: 3, protoFieldName: "otp", jsonFieldName: "otp", swiftFieldName: "otp")
      if let v = kickOut {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 5, protoFieldName: "kick_out", jsonFieldName: "kickOut", swiftFieldName: "kickOut")
      }
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ForgotPassword.Request) -> Bool {
      if tel != other.tel {return false}
      if password != other.password {return false}
      if otp != other.otp {return false}
      if (((kickOut != nil && kickOut! != false) || (other.kickOut != nil && other.kickOut! != false)) && (kickOut == nil || other.kickOut == nil || kickOut! != other.kickOut!)) {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_ForgotPassword.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_ForgotPassword.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_ForgotPassword.Reply>, Comm_Reply>(protoFieldNumber: 107, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_ForgotPassword_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_ForgotPassword) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_RequestOTP: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_RequestOTP"}
  public var protoMessageName: String {return "RequestOTP"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public enum Error: ProtobufEnum {
    public typealias RawValue = Int
    case telInvalid // = 1
    case exceededTimesLimit // = 2

    public init() {
      self = .telInvalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .telInvalid
      case 2: self = .exceededTimesLimit
      default: return nil
      }
    }

    public init?(name: String) {
      switch name {
      case "telInvalid": self = .telInvalid
      case "exceededTimesLimit": self = .exceededTimesLimit
      default: return nil
      }
    }

    public init?(jsonName: String) {
      switch jsonName {
      case "TEL_INVALID": self = .telInvalid
      case "EXCEEDED_TIMES_LIMIT": self = .exceededTimesLimit
      default: return nil
      }
    }

    public init?(protoName: String) {
      switch protoName {
      case "TEL_INVALID": self = .telInvalid
      case "EXCEEDED_TIMES_LIMIT": self = .exceededTimesLimit
      default: return nil
      }
    }

    public var rawValue: Int {
      get {
        switch self {
        case .telInvalid: return 1
        case .exceededTimesLimit: return 2
        }
      }
    }

    public var json: String {
      get {
        switch self {
        case .telInvalid: return "\"TEL_INVALID\""
        case .exceededTimesLimit: return "\"EXCEEDED_TIMES_LIMIT\""
        }
      }
    }

    public var hashValue: Int { return rawValue }

    public var debugDescription: String {
      get {
        switch self {
        case .telInvalid: return ".telInvalid"
        case .exceededTimesLimit: return ".exceededTimesLimit"
        }
      }
    }

  }

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_RequestOTP.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [
      "tel": 1,
    ]}
    public var protoFieldNames: [String: Int] {return [
      "tel": 1,
    ]}

    var unknown = ProtobufUnknownStorage()

    public var tel: String = ""

    public init() {}

    public init(tel: String = "")
    {
      self.tel = tel
    }

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRequiredField(fieldType: ProtobufString.self, value: &tel)
      default:
        handled = false
      }
      if handled {
          return true
      } else {
          return try unknown.decodeField(setter: &setter)
      }
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: tel, protoFieldNumber: 1, protoFieldName: "tel", jsonFieldName: "tel", swiftFieldName: "tel")
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_RequestOTP.Request) -> Bool {
      if tel != other.tel {return false}
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_RequestOTP.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_RequestOTP.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_RequestOTP.Reply>, Comm_Reply>(protoFieldNumber: 114, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_RequestOTP_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_RequestOTP) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

public struct Comm_GetSipAccount: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Comm_GetSipAccount"}
  public var protoMessageName: String {return "GetSipAccount"}
  public var protoPackageName: String {return "comm"}
  public var jsonFieldNames: [String: Int] {return [:]}
  public var protoFieldNames: [String: Int] {return [:]}

  var unknown = ProtobufUnknownStorage()

  public struct Request: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_GetSipAccount.Request"}
    public var protoMessageName: String {return "Request"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_GetSipAccount.Request) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  public struct Reply: ProtobufGeneratedMessage {
    public var swiftClassName: String {return "Comm_GetSipAccount.Reply"}
    public var protoMessageName: String {return "Reply"}
    public var protoPackageName: String {return "comm"}
    public var jsonFieldNames: [String: Int] {return [:]}
    public var protoFieldNames: [String: Int] {return [:]}

    var unknown = ProtobufUnknownStorage()

    public init() {}

    public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      return try unknown.decodeField(setter: &setter)
    }

    public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
      unknown.traverse(visitor: &visitor)
    }

    public func _protoc_generated_isEqualTo(other: Comm_GetSipAccount.Reply) -> Bool {
      if unknown != other.unknown {return false}
      return true
    }
  }

  struct Extensions {

    static let Comm_Reply_id = ProtobufGenericMessageExtension<ProtobufOptionalMessageField<Comm_GetSipAccount.Reply>, Comm_Reply>(protoFieldNumber: 115, protoFieldName: "ID", jsonFieldName: "iD", swiftFieldName: "Comm_GetSipAccount_id", defaultValue: nil)
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try unknown.decodeField(setter: &setter)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    unknown.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Comm_GetSipAccount) -> Bool {
    if unknown != other.unknown {return false}
    return true
  }
}

extension Comm_Receive {
  public var Comm_ReceiveProfile_receiveProfile: Comm_ReceiveProfile? {
    get {return getExtensionValue(ext: Comm_ReceiveProfile.Extensions.Comm_Receive_receiveProfile)}
    set {setExtensionValue(ext: Comm_ReceiveProfile.Extensions.Comm_Receive_receiveProfile, value: newValue)}
  }
}

extension Comm_Receive {
  public var Comm_ReceiveSession_receiveSession: Comm_ReceiveSession? {
    get {return getExtensionValue(ext: Comm_ReceiveSession.Extensions.Comm_Receive_receiveSession)}
    set {setExtensionValue(ext: Comm_ReceiveSession.Extensions.Comm_Receive_receiveSession, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_KeepAlive_id: Comm_KeepAlive.Reply? {
    get {return getExtensionValue(ext: Comm_KeepAlive.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_KeepAlive.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_Authenticate_id: Comm_Authenticate.Reply? {
    get {return getExtensionValue(ext: Comm_Authenticate.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_Authenticate.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_Login_id: Comm_Login.Reply? {
    get {return getExtensionValue(ext: Comm_Login.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_Login.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_Logout_id: Comm_Logout.Reply? {
    get {return getExtensionValue(ext: Comm_Logout.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_Logout.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_ChangePassword_id: Comm_ChangePassword.Reply? {
    get {return getExtensionValue(ext: Comm_ChangePassword.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_ChangePassword.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_UpdateProfile_id: Comm_UpdateProfile.Reply? {
    get {return getExtensionValue(ext: Comm_UpdateProfile.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_UpdateProfile.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_ChangeAvatar_id: Comm_ChangeAvatar.Reply? {
    get {return getExtensionValue(ext: Comm_ChangeAvatar.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_ChangeAvatar.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_UpdateDeviceToken_id: Comm_UpdateDeviceToken.Reply? {
    get {return getExtensionValue(ext: Comm_UpdateDeviceToken.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_UpdateDeviceToken.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_CheckAccount_id: Comm_CheckAccount.Reply? {
    get {return getExtensionValue(ext: Comm_CheckAccount.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_CheckAccount.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_Register_id: Comm_Register.Reply? {
    get {return getExtensionValue(ext: Comm_Register.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_Register.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_ForgotPassword_id: Comm_ForgotPassword.Reply? {
    get {return getExtensionValue(ext: Comm_ForgotPassword.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_ForgotPassword.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_RequestOTP_id: Comm_RequestOTP.Reply? {
    get {return getExtensionValue(ext: Comm_RequestOTP.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_RequestOTP.Extensions.Comm_Reply_id, value: newValue)}
  }
}

extension Comm_Reply {
  public var Comm_GetSipAccount_id: Comm_GetSipAccount.Reply? {
    get {return getExtensionValue(ext: Comm_GetSipAccount.Extensions.Comm_Reply_id)}
    set {setExtensionValue(ext: Comm_GetSipAccount.Extensions.Comm_Reply_id, value: newValue)}
  }
}

public let Comm_CommProfile_Extensions: ProtobufExtensionSet = [
  Comm_ReceiveProfile.Extensions.Comm_Receive_receiveProfile,
  Comm_ReceiveSession.Extensions.Comm_Receive_receiveSession,
  Comm_KeepAlive.Extensions.Comm_Reply_id,
  Comm_Authenticate.Extensions.Comm_Reply_id,
  Comm_Login.Extensions.Comm_Reply_id,
  Comm_Logout.Extensions.Comm_Reply_id,
  Comm_ChangePassword.Extensions.Comm_Reply_id,
  Comm_UpdateProfile.Extensions.Comm_Reply_id,
  Comm_ChangeAvatar.Extensions.Comm_Reply_id,
  Comm_UpdateDeviceToken.Extensions.Comm_Reply_id,
  Comm_CheckAccount.Extensions.Comm_Reply_id,
  Comm_Register.Extensions.Comm_Reply_id,
  Comm_ForgotPassword.Extensions.Comm_Reply_id,
  Comm_RequestOTP.Extensions.Comm_Reply_id,
  Comm_GetSipAccount.Extensions.Comm_Reply_id
]
